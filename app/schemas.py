from . import ma

class CharacterSchema(ma.Schema):
    class Meta:
      fields: (
            'char_id',
            'chemistry_table_id',
            'name',
            'starting_addr',
            'curve_ball_speed',
            'fast_ball_speed',
            'curve',
            'fielding_arm',
            'batting_stance',
            'nice_contact_spot_size',
            'perfect_contact_spot_size',
            'slap_hit_power',
            'charge_hit_power',
            'bunting',
            'hit_trajectory_mpp',
            'hit_trajectory_mhl',
            'speed',
            'throwing_arm',
            'character_class',
            'weight',
            'captain',
            'captain_star_hit_or_pitch',
            'non_captain_star_swing',
            'non_captain_star_pitch',
            'batting_stat_bar',
            'pitching_stat_bar',
            'running_stat_bar',
            'fielding_stat_bar',
      )

class ChemistryTableSchema(ma.Schema):
    class Meta:
        fields = (
            'mario',
            'luigi',
            'dk',
            'diddy',
            'peach',
            'daisy',
            'yoshi',
            'baby_mario',
            'baby_luigi',
            'bowser',
            'wario',
            'waluigi',
            'koopa_r',
            'toad_r',
            'boo',
            'toadette',
            'shy_guy_r',
            'birdo',
            'monty',
            'bowser_jr',
            'paratroopa_r',
            'pianta_b',
            'pianta_r',
            'pianta_y',
            'noki_b',
            'noki_r',
            'noki_g',
            'bro_h',
            'toadsworth',
            'toad_b',
            'toad_y',
            'toad_g',
            'toad_p',
            'magikoopa_b',
            'magikoopa_r',
            'magikoopa_g',
            'magikoopa_y',
            'king_boo',
            'petey',
            'dixie',
            'goomba',
            'paragoomba',
            'koopa_g',
            'paratroopa_g',
            'shy_guy_b',
            'shy_guy_y',
            'shy_guy_g',
            'shy_guy_bk',
            'dry_bones_gy',
            'dry_bones_g',
            'dry_bones_r',
            'dry_bones_b',
            'bro_f',
            'bro_b',
        )

class UserSchema(ma.Schema):
  class Meta:
      fields = (
          'username',
          'email',
          'rio_key',
          'private',
      )

class UserCharacterStatsSchema(ma.Schema):
    class Meta:
        fields: (
            'id',
            'user_id',
            'char_id',
            'num_of_games',
            'at_bats',
            'hits',
            'walks',
            'bases_stolen',
            'strikeouts',
            'innings_pitched',
            'batters_faced',
            'runs_allowed',
            'defensive_star_pitches',
        )

class GameSchema(ma.Schema):
    class Meta:
        fields = (
          'game_id',
          'date_time',
          'ranked',
          'stadium_id',
          'away_player_id',
          'home_player_id',
          'away_score',
          'home_score',
          'innings_selected',
          'innings_played',
          'quitter',
        )

class CharacterGameSummarySchema(ma.Schema):
    class Meta:
        fields = (
            'id',
            'game_id',
            'char_id',
            'team_id',
            'roster_loc',
            'superstar',
            'batters_faced',
            'runs_allowed',
            'batters_walked',
            'batters_hit',
            'hits_allowed',
            'homeruns_allowed',
            'pitches_thrown',
            'stamina',
            'was_pitcher',
            'batter_outs',
            'strikeouts_pitched',
            'star_pitches_thrown',
            'big_plays',
            'innings_pitched',
            'at_bats',
            'hits',
            'singles',
            'doubles',
            'triples',
            'homeruns',
            'strikeouts',
            'walks_bb',
            'walks_hit',
            'rbi',
            'bases_stolen',
            'star_hits',
        )

class PitchSummarySchema(ma.Schema):
    class Meta:
        fields = (
            'id',
            'batter_id',
            'batter_id',
            'pitcher_id',
            'inning',
            'half_inning',
            'batter_score',
            'pitcher_score',
            'balls',
            'strikes',
            'outs',
            'runner_on_1',
            'runner_on_2',
            'runner_on_3',
            'chem_links_ob',
            'star_chance',
            'batter_stars',
            'pitcher_stars',
            'pitcher_handedness',
            'pitch_type',
            'charge_pitch_type',
            'star_pitch',
            'pitch_speed',
            'type_of_swing',
            'rbi',
            'num_outs',
            'result_inferred',
            'result_game',
        )

class ContactSummarySchema(ma.Schema):
    class Meta:
        fields = (
            'id',
            'pitchsummary_id',
            'type_of_contact',
            'charge_power_up',
            'charge_power_down',
            'star_swing_five_star',
            'input_direction',
            'batter_handedness',
            'ball_angle',
            'ball_horiz_power',
            'ball_vert_power',
            'ball_x_velocity',
            'ball_y_velocity',
            'ball_z_velocity',
            'ball_x_pos',
            'ball_y_pos',
            'ball_z_pos',
            'ball_x_pos_upon_hit',
            'ball_y_pos_upon_hit',
        )

class FieldingSummarySchema(ma.Schema):
    class Meta:
        fields = (
            'id',
            'contact_summary_id',
            'fielder_character_game_summary_id',
            'position',
        )